import DashboardLayout from '@/components/layout/DashboardLayout'

export default function SentinelPage() {
  return (
    <DashboardLayout
      title="Neural Sentinel"
      description="Ëëó‰ΩúÊ®©‰øùË≠∑„Å®Ê®©Âà©‰æµÂÆ≥„ÅÆÁõ£Ë¶ñ„Ç∑„Çπ„ÉÜ„É†"
    >
      <div className="grid gap-6">
        {/* Protection Status */}
        <div className="grid grid-cols-3 gap-4">
          {[
            { label: '‰øùË≠∑‰∏≠„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ', value: '24', icon: 'üõ°Ô∏è' },
            { label: 'Ê§úÂá∫„Åï„Çå„Åü‰æµÂÆ≥', value: '3', icon: '‚ö†Ô∏è', alert: true },
            { label: 'Ëß£Ê±∫Ê∏à„Åø', value: '47', icon: '‚úÖ' },
          ].map((stat, index) => (
            <div
              key={index}
              className={`bg-white dark:bg-gray-900 rounded-lg border p-6 ${
                stat.alert
                  ? 'border-yellow-300 dark:border-yellow-700'
                  : 'border-gray-200 dark:border-gray-800'
              }`}
            >
              <div className="flex items-center justify-between mb-2">
                <span className="text-2xl">{stat.icon}</span>
                {stat.alert && (
                  <span className="px-2 py-1 bg-yellow-100 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-400 rounded-full text-xs">
                    Ë¶ÅÂØæÂøú
                  </span>
                )}
              </div>
              <div className="text-sm text-gray-600 dark:text-gray-400 mb-1">{stat.label}</div>
              <div className="text-2xl font-bold text-gray-900 dark:text-white">{stat.value}</div>
            </div>
          ))}
        </div>

        {/* Recent Infringements */}
        <div className="bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-800 p-6">
          <h2 className="text-xl font-semibold mb-4">Ê§úÂá∫„Åï„Çå„Åü‰æµÂÆ≥</h2>
          <div className="space-y-3">
            {[
              {
                content: 'Summer Vibes 2025',
                platform: 'YouTube',
                type: 'ÁÑ°Êñ≠„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ',
                severity: 'È´ò',
                detected: '2025-10-21 08:30',
                status: 'ÂØæÂøú‰∏≠'
              },
              {
                content: 'Midnight Dreams',
                platform: 'SoundCloud',
                type: 'ÁÑ°Êñ≠‰ΩøÁî®',
                severity: '‰∏≠',
                detected: '2025-10-20 14:15',
                status: 'Ë™øÊüª‰∏≠'
              },
              {
                content: 'Album Art Design',
                platform: 'Instagram',
                type: 'ÁîªÂÉèÁõóÁî®',
                severity: '‰Ωé',
                detected: '2025-10-19 10:00',
                status: 'ÈÄöÁü•ÈÄÅ‰ø°Ê∏à„Åø'
              },
            ].map((infringement, index) => (
              <div
                key={index}
                className="p-4 border border-gray-200 dark:border-gray-700 rounded-lg"
              >
                <div className="flex items-start justify-between mb-2">
                  <div className="flex-1">
                    <h3 className="font-medium text-gray-900 dark:text-white mb-1">{infringement.content}</h3>
                    <div className="flex items-center space-x-3 text-sm text-gray-600 dark:text-gray-400">
                      <span>{infringement.platform}</span>
                      <span>‚Ä¢</span>
                      <span>{infringement.type}</span>
                      <span>‚Ä¢</span>
                      <span>{infringement.detected}</span>
                    </div>
                  </div>
                  <div className="flex items-center space-x-2">
                    <span
                      className={`px-2 py-1 rounded-full text-xs ${
                        infringement.severity === 'È´ò'
                          ? 'bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-400'
                          : infringement.severity === '‰∏≠'
                          ? 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-400'
                          : 'bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-400'
                      }`}
                    >
                      {infringement.severity}
                    </span>
                    <span className="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-400 rounded-full text-xs">
                      {infringement.status}
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Monitoring Rules */}
        <div className="bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-800 p-6">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-semibold">Áõ£Ë¶ñ„É´„Éº„É´</h2>
            <button className="px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg text-sm font-medium transition-colors">
              Êñ∞Ë¶è„É´„Éº„É´
            </button>
          </div>

          <div className="space-y-3">
            {[
              {
                name: '„Ç™„Éº„Éá„Ç£„Ç™„Éï„Ç£„É≥„Ç¨„Éº„Éó„É™„É≥„ÉàÁõ£Ë¶ñ',
                targets: ['YouTube', 'SoundCloud', 'Spotify'],
                status: 'ÊúâÂäπ',
                lastScan: '2ÊôÇÈñìÂâç'
              },
              {
                name: 'ÁîªÂÉèÈ°û‰ººÂ∫¶„ÉÅ„Çß„ÉÉ„ÇØ',
                targets: ['Instagram', 'Twitter', 'Pinterest'],
                status: 'ÊúâÂäπ',
                lastScan: '30ÂàÜÂâç'
              },
              {
                name: '„É°„Çø„Éá„Éº„ÇøÁõ£Ë¶ñ',
                targets: ['„Åô„Åπ„Å¶„ÅÆ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†'],
                status: 'ÊúâÂäπ',
                lastScan: '15ÂàÜÂâç'
              },
            ].map((rule, index) => (
              <div
                key={index}
                className="flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg"
              >
                <div className="flex-1">
                  <div className="font-medium text-gray-900 dark:text-white mb-1">{rule.name}</div>
                  <div className="flex items-center space-x-2">
                    {rule.targets.map((target) => (
                      <span
                        key={target}
                        className="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-400 rounded text-xs"
                      >
                        {target}
                      </span>
                    ))}
                  </div>
                </div>
                <div className="text-right">
                  <span className="px-3 py-1 bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-400 rounded-full text-sm">
                    {rule.status}
                  </span>
                  <div className="text-sm text-gray-500 dark:text-gray-400 mt-1">
                    ÊúÄÁµÇ„Çπ„Ç≠„É£„É≥: {rule.lastScan}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Rights Management */}
        <div className="bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-800 p-6">
          <h2 className="text-xl font-semibold mb-4">Ê®©Âà©ÊÉÖÂ†±</h2>
          <div className="space-y-3">
            {[
              { content: 'Summer Vibes 2025', type: 'Ê•ΩÊõ≤', registered: '2025-10-15', expires: 'ÁµÇË∫´' },
              { content: 'Album Cover Art', type: '„Ç¢„Éº„Éà„ÉØ„Éº„ÇØ', registered: '2025-10-10', expires: 'ÁµÇË∫´' },
              { content: 'Brand Logo', type: '„É≠„Ç¥', registered: '2025-09-01', expires: 'ÁµÇË∫´' },
            ].map((right, index) => (
              <div
                key={index}
                className="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg"
              >
                <div className="flex-1">
                  <div className="font-medium text-gray-900 dark:text-white">{right.content}</div>
                  <div className="text-sm text-gray-600 dark:text-gray-400 mt-1">
                    {right.type} ‚Ä¢ ÁôªÈå≤Êó•: {right.registered}
                  </div>
                </div>
                <div className="text-sm text-gray-600 dark:text-gray-400">
                  ÊúâÂäπÊúüÈôê: {right.expires}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </DashboardLayout>
  )
}
